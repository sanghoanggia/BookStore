@{

    ViewData["Title"] = "Login";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
 @model BookStoreCore.Models.Admin;
 @addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Multi Shop</title>
    <!-- Font -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="../LayoutHome/assets/fonts/fontawesome-free-5.15.3-web/css/all.min.css">
    <!-- Bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <!-- CSS -->
    <link rel="stylesheet" href="../LayoutHome/assets/css/base.css">
    <link rel="stylesheet" href="../LayoutHome/assets/css/main.css">
</head>
<body>

    <!-- Login -->
    <div class="container-fluid">
        <div class="row justify-content-center">
            <div class="col-4">
                <h2 class="text-center my-4">Đăng nhập Admin</h2>
                @* <form class="d-flex flex-column"> *@
                @using (Html.BeginForm("Login", "AccessAdmin", FormMethod.Post))
                {
                    @*  <input type="text" class="form-control rounded-0 shadow-none mb-3"
                placeholder="Tên đăng nhập/Email/Số điện thoại"> *@
                    @Html.TextBoxFor(x => x.Username, new
                        {
                            @class = "form-control rounded-0 shadow-none mb-3",
                            placeholder = "Username",
                            required = "required",
                            autofocus = "autofocus"
                        })
                    @*   <input type="text" class="form-control rounded-0 shadow-none mb-3" placeholder="Mật khẩu"> *@

                    @Html.TextBoxFor(x => x.Password, new
                        {
                            @class = "form-control rounded-0 shadow-none mb-3",
                            type = "password",
                            placeholder = "Password"
                        })


                    <div class="d-flex justify-content-between mb-3">
                        <div class="custom-checkbox">
                            <input type="checkbox" class="custom-checkbox__input" id="remember-login" hidden>
                            <label for="remember-login" class="custom-checkbox__checkmark"></label>
                            <label for="remember-login" class="custom-checkbox__label">Nhớ đăng nhập</label>
                        </div>
                        <a href="#" class="text-primary">Quên mật khẩu?</a>
                    </div>
                    <button class="btn btn-primary rounded-0 shadow-none mb-3" type="submit">Đăng nhập</button>
                }
                @* </form> *@
              
        </div>
    </div>
    <!-- Bootstrap -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Jquery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <!-- Code injected by live-server -->
    <script>
        // <![CDATA[  <-- For SVG support
        if ('WebSocket' in window) {
            (function () {
                function refreshCSS() {
                    var sheets = [].slice.call(document.getElementsByTagName("link"));
                    var head = document.getElementsByTagName("head")[0];
                    for (var i = 0; i < sheets.length; ++i) {
                        var elem = sheets[i];
                        var parent = elem.parentElement || head;
                        parent.removeChild(elem);
                        var rel = elem.rel;
                        if (elem.href && typeof rel != "string" || rel.length == 0 || rel.toLowerCase() == "stylesheet") {
                            var url = elem.href.replace(/(&|\?)_cacheOverride=\d+/, '');
                            elem.href = url + (url.indexOf('?') >= 0 ? '&' : '?') + '_cacheOverride=' + (new Date().valueOf());
                        }
                        parent.appendChild(elem);
                    }
                }
                var protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://';
                var address = protocol + window.location.host + window.location.pathname + '/ws';
                var socket = new WebSocket(address);
                socket.onmessage = function (msg) {
                    if (msg.data == 'reload') window.location.reload();
                    else if (msg.data == 'refreshcss') refreshCSS();
                };
                if (sessionStorage && !sessionStorage.getItem('IsThisFirstTime_Log_From_LiveServer')) {
                    console.log('Live reload enabled.');
                    sessionStorage.setItem('IsThisFirstTime_Log_From_LiveServer', true);
                }
            })();
        }
        else {
            console.error('Upgrade your browser. This Browser is NOT supported WebSocket for Live-Reloading.');
        }
        // ]]>
    </script>
</body>
</html>